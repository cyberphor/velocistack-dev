services:
  postgres: # database
    build: postgres
    image: postgres:dev
    hostname: postgres
    env_file: postgres/.env
    volumes:
      - postgres:/var/lib/postgresql/data/
    ports:
      - 5432:5432
  intelowl: # Web Server Gateway Interface between Nginx and Intel Owl (a Python/Django-based app)
    build: intelowl
    image: intelowl:dev
    hostname: intelowl
    volumes:
      - logs:/var/log/intel_owl
      - web:/opt/deploy/intel_owl/static
    ports:
      - 8001:8001
    env_file: intelowl/.env
    depends_on:
      - postgres 
  rabbitmq: # message/task broker between front-end (Nginx/uWSGI) and back-end (Celery); task results > postgres
    build: rabbitmq
    image: rabbitmq:dev
    ports:
      - "5672:5672"
      - "15672:15672"
  celery-beat: # schedules tasks for Intel Owl
    build: celery-beat
    image: celery-beat:dev
    volumes:
      - logs:/var/log/intel_owl
      - shared:/opt/deploy/files_required
    env_file: celery-beat/.env
    depends_on:
      - postgres
      - rabbitmq
      - intelowl
  celery-worker: # off-loads tasks for Intel Owl
    build: celery-worker
    image: celery-worker:dev
    volumes:
      - logs:/var/log/intel_owl
      - shared:/opt/deploy/files_required
    env_file: celery-worker/.env
    depends_on:
      - rabbitmq
      - postgres
  nginx:
    build: nginx
    image: nginx:dev
    hostname: nginx
    volumes:
      - certs:/etc/nginx/ssl
      - logs:/var/log/nginx
      - web:/var/www/static
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - intelowl
  velociraptor:
    build: velociraptor
    image: velociraptor:dev
    volumes:
      - velociraptor_data:/opt/velociraptor/:rw
      - velociraptor_api:/api/
    env_file: velociraptor/.env
    ports:
      - "8000:8000"
      - "8001:8001"
      - "8889:8889"
# elasticsearch:
#   build: elasticsearch
#   image: elasticsearch:dev
#   env_file: .env
#   volumes:
#     - certs:/usr/share/elasticsearch/config/certs/
#   ports:
#     - 9200:9200
#   extra_hosts:
#     - "elasticsearch:${ELASTICSEARCH_IP}"
#   healthcheck:
#     test: ["CMD-SHELL", "curl ${ELASTICSEARCH_HOSTS} --cacert ${ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES} -u ${ELASTIC_USERNAME}:${ELASTIC_PASSWORD}"]
#     start_period: 30s
#     retries: 2
# kibana
# grafana
# prometheus
# iris

volumes:
  certs:
  logs:
  postgres:
  web: 
  shared:
  velociraptor_data:
  velociraptor_api: